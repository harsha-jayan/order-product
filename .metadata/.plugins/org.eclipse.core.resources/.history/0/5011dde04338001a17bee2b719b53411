buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

configurations{
    compile.exclude module: "spring-boot-starter-tomcat"
}

jar {
    baseName = 'product-query-side'
    archiveName = 'product-query-side.jar'
}

group = 'benwilcock'
apply plugin: 'spring-boot'
apply plugin: 'docker'

dependencies {
    compile project(':common-things')
    compile("com.h2database:h2")
    compile("mysql:mysql-connector-java")
    compile("org.axonframework:axon-amqp:2.4.3")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
    compile("com.graphql-java:graphql-spring-boot-starter:5.0.2")
    compile("com.graphql-java:graphql-java-tools:5.2.4")
    compile("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
    compile("org.springframework.retry:spring-retry")
    compile("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")
    compile("org.springframework.cloud:spring-cloud-starter-eureka")
    //compile("io.springfox:springfox-swagger-ui:2.0.2")
    //compile("io.springfox:springfox-swagger2:2.7.0")
    compile("io.springfox:springfox-bean-validators:2.9.2")
    compile("org.springframework.cloud:spring-cloud-starter-config")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR1"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

task image(type: Docker, dependsOn: assemble){
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst{
        copy {
            from jar
            into stageDir
        }
    }
}

