<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
<fullyQualifiedTypeName name="com.example.springbootzuulproxygatewaystudentservice.model.Student"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="com.netflix.zuul.ZuulFilter"/>
<fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="com.example.springbootzuulproxygateway.filters.PreFilter"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.axonframework.config.EventHandlingConfiguration"/>
<fullyQualifiedTypeName name="javax.annotation.PostConstruct"/>
<fullyQualifiedTypeName name="org.axonframework.eventsourcing.eventstore.EventStorageEngine"/>
<fullyQualifiedTypeName name="org.axonframework.mongo.MongoTemplate"/>
<fullyQualifiedTypeName name="org.axonframework.mongo.eventsourcing.eventstore.MongoEventStorageEngine"/>
<fullyQualifiedTypeName name="org.axonframework.serialization.json.JacksonSerializer"/>
<fullyQualifiedTypeName name="org.axonframework.mongo.eventsourcing.eventstore.documentperevent.DocumentPerEventStorageStrategy"/>
<fullyQualifiedTypeName name="org.axonframework.commandhandling.gateway.CommandGateway"/>
<fullyQualifiedTypeName name="java.util.concurrent.CompletableFuture"/>
<fullyQualifiedTypeName name="com.soagrowers.productcommand.aggregates.ProductAggregate"/>
<fullyQualifiedTypeName name="com.soagrowers.productcommand.commands.UpdateProductCommand"/>
<fullyQualifiedTypeName name="com.soagrowers.productevents.events.AbstractEvent"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="io.swagger.annotations.Api"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
<fullyQualifiedTypeName name="com.soagrowers.productcommand.commands.MarkProductAsSaleableCommand"/>
<fullyQualifiedTypeName name="org.axonframework.eventhandling.annotation.EventHandler"/>
<fullyQualifiedTypeName name="com.soagrowers.productevents.events.ProductUpdatedEvent"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Profile"/>
<fullyQualifiedTypeName name="com.rabbitmq.client.AMQP.Queue"/>
<fullyQualifiedTypeName name="org.axonframework.commandhandling.annotation.TargetAggregateIdentifier"/>
<fullyQualifiedTypeName name="com.soagrowers.productevents.events.ProductDeleteEvent"/>
<fullyQualifiedTypeName name="lombok.EqualsAndHashCode"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="org.hibernate.annotations.GeneratorType"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.module.kotlin.ReflectionCache.BooleanTriState.False"/>
<fullyQualifiedTypeName name="java.time.LocalDate"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="com.graphql.example.startergraphql.entity.Vehicle"/>
<fullyQualifiedTypeName name="com.coxautodev.graphql.tools.GraphQLQueryResolver"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="com.soagrowers.productquery.repository.ProductRepository"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.soagrowers.productquery.service.ProductService"/>
<fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
<fullyQualifiedTypeName name="com.soagrowers.productquery.domain.Product"/>
<fullyQualifiedTypeName name="com.soagrowers.productquery.querysidegraphql.entity.Product"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
</qualifiedTypeNameHistroy>
